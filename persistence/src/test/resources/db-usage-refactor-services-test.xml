<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--<bean id="entityManagerFactory3" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
        <!--<property name="persistenceXmlLocation" value="classpath:META-INF/usage-persistence.xml"/>-->
        <!--<property name="persistenceUnitName" value="loadbalancingUsage"/>-->
    <!--</bean>-->

    <!--<bean id="transactionManager3" class="org.springframework.orm.jpa.JpaTransactionManager">-->
        <!--<property name="entityManagerFactory" ref="entityManagerFactory3"/>-->
        <!--&lt;!&ndash;<qualifier value="lb_host_usage"/>&ndash;&gt;-->
    <!--</bean>-->

    <!--<tx:annotation-driven/>-->
    <!--<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>-->

    <!--&lt;!&ndash;DB Table: lb_host_usage&ndash;&gt;-->
    <!--<bean id="hostUsageRefactorRepository"-->
          <!--class="org.openstack.atlas.service.domain.usage.repository.HostUsageRefactorRepository"-->
          <!--depends-on="entityManagerFactory3"/>-->

    <!--&lt;!&ndash;DB Table: lb_merged_host_usage&ndash;&gt;-->
    <!--<bean id="loadBalancerMergedHostUsageRepository"-->
          <!--class="org.openstack.atlas.service.domain.usage.repository.LoadBalancerMergedHostUsageRepository"-->
          <!--depends-on="entityManagerFactory3"/>-->

    <!--&lt;!&ndash; TODO: Get a little help from Phil and/or online &ndash;&gt;-->
    <!--&lt;!&ndash;TODO: view quartzjob.xml in the 'jobs' module for springing the 'job' itself, can make ref to service here or we can decide where all this will go later..&ndash;&gt;-->
    <!--<bean id="hostRefactorService" class="org.openstack.atlas.service.domain.services.impl.HostServiceImpl"/>-->


    <!--&lt;!&ndash;Usage processing&ndash;&gt;-->
    <!--<bean id="usageRefactorService" class="org.openstack.atlas.service.domain.services.impl.UsageRefactorServiceImpl">-->
    <!--</bean>-->
    <!--<bean id="abstractUsageEventCollector"-->
          <!--class="org.openstack.atlas.usagerefactor.collection.AbstractUsageEventCollection"-->
          <!--abstract="true">-->
    <!--</bean>-->
    <!--<bean id="usageEventCollection" class="org.openstack.atlas.usagerefactor.collection.UsageEventCollection"-->
          <!--parent="abstractUsageEventCollector">-->
        <!--<property name="hostRepository" ref="hostRepository"/>-->
        <!--<property name="usageEventProcessor" ref="usageEventProcessor"/>-->
    <!--</bean>-->
    <!--<bean id="usageEventProcessor" class="org.openstack.atlas.usagerefactor.processor.impl.UsageEventProcessorImpl"-->
          <!--scope="prototype">-->
        <!--<property name="accountUsageRepository" ref="accountUsageRepository"/>-->
        <!--<property name="loadBalancerRepository" ref="loadBalancerRepository"/>-->
        <!--<property name="virtualIpRepository" ref="virtualIpRepository"/>-->
        <!--<property name="usageRefactorService" ref="usageRefactorService"/>-->
        <!--<property name="usageService" ref="usageRefactorService"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;<bean id="usagePollerHelper" class="org.openstack.atlas.usagerefactor.helpers.UsagePollerHelper"&ndash;&gt;-->
          <!--&lt;!&ndash;scope="prototype"&ndash;&gt;-->

</beans>